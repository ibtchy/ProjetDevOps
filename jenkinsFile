pipeline {
 environment { 

        registry = "cheriflakhoua/cherifrepo" 

        registryCredential = 'dockerhub_id' 

        dockerImage = '' 

    }
    agent any

    stages {
        stage('Checkout GIT') {
            steps {
                echo 'Pulling'
               git branch: 'medcheriflakhoua', credentialsId: 'Cred', url: 'https://github.com/ibtchy/ProjetDevOps.git'
                
            }
        }
      stage('Maven Version'){
            steps {
                sh 'mvn -version'
            }
        }
        
        
          stage('Compiling the artifact') {
             
             
            steps {
echo "compiling"
                sh 'mvn compile'
               
            }
        }
       
               
        stage('Code Quality Check via SonarQube')
       {
         steps{
         sh 'mvn sonar:sonar \
  -Dsonar.projectKey=cherif1 \
  -Dsonar.host.url=http://192.168.1.103:9000 \
  -Dsonar.login=eb9e7d143a947b00cb4b48d135da4fb384a967a8'
         }       
       }
       
        stage ('Test Unitaire')
        {
        steps {
        sh 'mvn test -Dtest="tn.esprit.spring.FournisseurServiceTest.java"' 
        }
        
        }
        stage('Nexus')
       {
         steps{
         sh 'mvn deploy -DskipTests'
         }       
       }
       stage('Building our image') { 

            steps { 

                script { 

                    dockerImage = docker.build registry + ":$BUILD_NUMBER" 

                }

            } 

        }

        stage('Deploy our image') { 

            steps { 

                script { 

                    docker.withRegistry( '', registryCredential ) { 

                        dockerImage.push() 

                    }

                } 

            }

        } 

        stage('Cleaning up') { 

            steps { 

                sh "docker rmi $registry:$BUILD_NUMBER" 

            }

        } 
        stage('Docker Compose'){
        
        steps {
        
        sh "docker-compose up -d"
        
        }
        
        }
      
      
         
       
           
        
        
        
        
    }
}
