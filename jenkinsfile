pipeline {
    agent any
    
 environment {
            registry = "ibtchy/projetdevops"
            registryCredential = 'docker'
            dockerImage = ''
    }
        
    stages {
        stage('Checkout GIT') {
            steps {
                echo 'Pulling'
                git branch: 'ibtiProduit',
                credentialsId: 'cred',
                url: 'https://github.com/ibtchy/ProjetDevOps.git';
                
            }
        }
         stage('Maven Version'){
            steps {
                sh 'mvn -version'
            }
        }
        
        stage('compile'){
            steps {
                sh 'mvn compile -e'
            }
        }
        stage('package'){
            steps {
                sh 'mvn clean package -DskipTests'
            }
        }
        
        stage ('test'){
        steps{
            sh 'mvn test -Dtest="tn.esprit.spring.ProduitServiceImplTests.java"'
        }
        }
      
       
        /* stage("sonar"){
        steps {
                withSonarQubeEnv ( installationName: 'SonarQube'){
                sh 'mvn sonar:sonar'
                }
        }
        }  */
        
       stage ('Nexus'){
                steps{
                    sh 'mvn deploy -DskipTests'

                }
        }
      
        
        stage('build img') {
                 steps {
                        script {
                            dockerImage = docker.build registry + ":$BUILD_NUMBER"
                        }
                    }
        }
        stage('Deploy img') {
                  steps {
                        script {
                            docker.withRegistry( '', registryCredential ){

                            dockerImage.push()
                            }
                        }

                    }
                }

         stage('clean') {
                steps {
                        sh "docker rmi $registry:$BUILD_NUMBER"
                }
                }
                
        stage('DockerCompose'){

        steps {

        sh "docker-compose up -d"

        }

        }
        
    }
}
